version: "3.7"
networks:
  monitor-net:
    driver: overlay
    attachable: true

volumes:
  prometheus: {}

configs:
   dockerd_config:
    file: ./dockerd-exporter/Caddyfile
   prom_conf:
    file: ./prometheus/conf/prometheus.yml
   node_exporter_entrypoint:
    file: ./node-exporter/docker-entrypoint.sh

services:
  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    networks:
      - monitor-net
    command: -logtostderr -docker_only
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

  node-exporter:
    image: prom/node-exporter:latest
    networks:
      - monitor-net
    volumes:
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - /proc:/host/proc:ro
      - /etc/hostname:/etc/nodename
    configs:
      - source: node_exporter_entrypoint 
        target: /docker-entrypoint.sh
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
    environment:
      - NODE_ID={{.Node.ID}}
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
      - '--collector.textfile.directory=/home/'
      - '--collector.meminfo_numa'
      - '--no-collector.ipvs'
    entrypoint:
       - /bin/sh
       - /docker-entrypoint.sh

 # dockerd-exporter:
 #   image: stefanprodan/caddy
 #   networks:
 #     - monitor-net
 #   environment:
 #     - DOCKER_GWBRIDGE_IP=172.18.0.1
 #   configs:
 #     - source: dockerd_config
 #       target: /etc/caddy/Caddyfile
 #   deploy:
 #     mode: global
 #     restart_policy:
 #       condition: on-failure
 #     resources:
 #       limits:
 #         memory: 128M
 #       reservations:
 #         memory: 64M

  prometheus:
    image: prom/prometheus
    networks:
      - monitor-net
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention=${PROMETHEUS_RETENTION:-24h}'
    volumes:
      - prometheus:/prometheus
    configs:
      - source: prom_conf
        target: /etc/prometheus/prometheus.yml
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          memory: 2048M
        reservations:
          memory: 128M

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    networks:
      - monitoring
    environment:
      GF_SECURITY_ADMIN_PASSWORD: foobar
      GF_USERS_ALLOW_SIGN_UP: false
      PROMETHEUS_ENDPOINT: http://prometheus:9090
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
      resources:
        limits:
          cpus: '0.50'
          memory: 64M
        reservations:
          cpus: '0.50'
          memory: 32M
